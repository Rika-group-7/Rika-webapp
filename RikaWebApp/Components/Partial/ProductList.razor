@page "/products"

@using GraphQL
@using RikaWebApp.Services
@inject RikaWebApp.Services.ProductService ProductService
@*_ProductList.razor.css*@




<div class="container">
    <div class="product-list row">
        @if (Products == null || Products.Count == 0)
        {
            <p>Loading products ...</p>
        }
        else
        {
            <ul class="list-group">
                @foreach (var product in Products)
                {
                    <li class="col-3 product-items">
                        <img src="@product.ProductImage" alt="@product.Title" class="product-image" />
                        <h4>Title: @product.Title</h4>
                        <p>Product: @product.Description</p>
                        <p>Price: @(product.Price ?? 0):C</p>
                        <p>
                            Categories:
                            @if (product.Categories != null && product.Categories.Any())
                            {
                                @foreach (var category in product.Categories)
                                {
                                    <span>@category.CategoryName</span>
                                    @if (category != product.Categories.Last())
                                    {
                                        <span>, </span>
                                    }
                                }
                            }
                            else
                            {
                                <span>None</span>
                            }
                        </p>
                    </li>
                }
            </ul>
        }
    </div>
</div>

@code {
    private List<Product>? Products;

    protected override async Task OnInitializedAsync()
    {
        Products = await ProductService.GetProductsAsync();
        Console.WriteLine($"Loaded {Products.Count} products"); // Log the number of products loaded
    }
}


